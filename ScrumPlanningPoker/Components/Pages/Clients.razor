@page "/Clients"
@attribute [RenderModeInteractiveServer]
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Clients</PageTitle>

<h2>Clients</h2>

<p>Clients count: @ClientsCount</p>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>

@code {
    private HubConnection? hubConnection;
    private int ClientsCount;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/clienthub"))
            .Build();

        hubConnection.On<int>("ReceiveNotify", (clientsCount) =>
        {
            ClientsCount = clientsCount;
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("Notify");
        }
    }

    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}