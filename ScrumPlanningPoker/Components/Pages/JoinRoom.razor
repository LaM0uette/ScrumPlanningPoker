@page "/JoinRoom/{RoomName}"
@attribute [RenderModeInteractiveServer]
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable

<h2>Join Room: @RoomName</h2>
<p>Clients count: @ClientsCount</p>

@code {
    
    [Parameter] public string? RoomName { get; set; }
    private int ClientsCount;

    private HubConnection? hubConnection;
    
    protected override async Task OnInitializedAsync()
    {
        if (hubConnection == null)
        {
            hubConnection = new HubConnectionBuilder()
                .WithUrl(Navigation.ToAbsoluteUri("/roomhub"))
                .Build();

            hubConnection.On<int>("ReceiveNotify", (clientsCount) =>
            {
                ClientsCount = clientsCount;
                InvokeAsync(StateHasChanged);
            });

            await hubConnection.StartAsync();
        }
    
        await Send();
    }
    
    private async Task Send()
    {
        if (hubConnection?.State == HubConnectionState.Connected)
        {
            Console.WriteLine("Send");
            await hubConnection.SendAsync("Notify");
        }
    }
    
    public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
        {
            await hubConnection.StopAsync();
            await hubConnection.DisposeAsync();
        }
    }
}