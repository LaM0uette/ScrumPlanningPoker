@page "/room/{RoomName}"
@attribute [RenderModeInteractiveServer(false)]
@using ScrumPlanningPoker.Entity.Game
@inherits RoomBase

<title>Game</title>

<div class="page">

    @if (!RoomIsValid)
    {
        <div class="container">

            <h1 class="title">Join game</h1>

            <div class="input-container">
                <label for="username">Enter your name</label>
                <input class="input-form" id="username" @bind-value="@UserName"/>
            </div>

            <div class="toggle-container">
                <MudSwitch @bind-Checked="@IsSpectator" Color="Color.Warning"/>
                <label>Join as spectator</label>
            </div>

            <button class="action-button" @onclick="JoinRoom">Join</button>

        </div>
    }
    else
    {
        <div class="horizontal-flex">

            <div class="card-layout">
                
                    @if (CurrentUser.IsSpectator || CardsIsRevealed)
                    {
                        <div class="spectator-layout">
                            
                            <div class="user-cards">
                                
                                @{
                                    var users = Users.Where(u => !u.IsSpectator).ToList();
                                    var usersCountHasCard = users.Count(u => u.CardValue.HasValue);
                                    var usersCount = users.Count;
                                    
                                    var ienumerable = users.Where(u => u.CardValue.HasValue).Select(u => u.CardValue);
                                    var usersCardsAverage = Cards.CalculateAverage(ienumerable);
                                }
                                
                                @if (!CardsIsRevealed)
                                {
                                    <h2 class="subtitle">Votes: @usersCountHasCard / @usersCount</h2>
                                }
                                else
                                {
                                    <h2 class="subtitle">Suggested note: @usersCardsAverage</h2>
                                }
                                
                            </div>
                            
                            @if (CurrentUser.IsSpectator)
                            {
                                @if (!CardsIsRevealed)
                                {
                                    <button class="action-button" @onclick="RevealCards">Reveal cards</button>
                                }
                                else
                                {
                                    <button class="action-button" @onclick="NewGame">Start new game</button>
                                }
                            }
                            
                        </div>
                    }
                    else
                    {
                        <div class="cards">
                            @foreach (var card in Cards.CardValues)
                            {
                                <button class="card @GetCardCssClass((int) card.Key)" @onclick="() => ClickOnCard((int) card.Key)">

                                    <p class="card-value-tiny card-value-top">@card.Value</p>

                                    <div class="inner-card">
                                        <p>@card.Value</p>
                                    </div>

                                    <p class="card-value-tiny card-value-bottom">@card.Value</p>

                                </button>
                            }
                        </div>
                    }
                
            </div>

            <div class="clients-layout">
                
                <div class="users-layout">

                    <div class="users-title-container">
                        <h2 class="subtitle users-title">Users</h2>
                    </div>

                    @foreach (var user in Users)
                    {
                        @if (!user.IsSpectator)
                        {
                            <div class="user-title-card">

                                <div class="user-info">

                                    <h3 class="user-name">@user.Name</h3>

                                    @if (user.CardValue.HasValue)
                                    {
                                        <img src="icons/check.png" alt="check"/>
                                    }

                                </div>

                                <div class="user-note">

                                    @if (CardsIsRevealed)
                                    {
                                        <p class="user-text">@Cards.GetCardValueString(user.CardValue)</p>
                                    }

                                </div>
                            </div>
                        }
                    }
                    
                </div>
                
                <div style="margin-bottom: 25px;"></div>

                <div class="users-layout spectator">

                    <div class="users-title-container">
                        <h2 class="subtitle users-title">Spectators</h2>
                    </div>

                    @foreach (var user in Users)
                    {
                        @if (user.IsSpectator)
                        {
                            <div class="user-title-card">
                                <div class="user-info">
                                    <h3 class="user-name">@user.Name</h3>
                                </div>
                            </div>
                        }
                    }
                    
                </div>
                
            </div>
            
        </div>
    }
</div>