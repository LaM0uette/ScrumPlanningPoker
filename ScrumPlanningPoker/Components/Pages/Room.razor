@page "/room/{RoomName}"
@attribute [RenderModeInteractiveServer(false)]
@using ScrumPlanningPoker.Entity.Game
@inherits RoomBase

<title>Game</title>

<div class="page">

    @if (!RoomIsValid)
    {
        <div class="container">

            <h1 class="title">Join game</h1>


            <div class="input-container">
                <label for="username">Enter your name</label>
                <input class="input-form" id="username" @bind-value="@UserName"/>
            </div>

            <div class="toggle-container">
                <MudSwitch @bind-Checked="@IsSpectator" Color="Color.Warning"/>
                <label>Join as spectator</label>
            </div>

            <button class="action-button" @onclick="JoinRoom">Join</button>

        </div>
    }
    else
    {
        <div class="horizontal-flex">

            <div class="card-layout">
                @if (!CurrentUser.IsSpectator)
                {
                    @if (!CardsIsRevealed)
                    {
                        <div class="cards">
                            @foreach (var card in Cards.CardValues)
                            {
                                
                                <button class="card" @onclick="() => ClickOnCard((int) card.Key)">
                                    <div class="inner-card">
                                        <p>@card.Value</p>
                                    </div>
                                </button>
                                
                                @* <div class="card"> *@
                                @*     <div class="inner-card"> *@
                                @*         <button @onclick="() => ClickOnCard((int) card.Key)">@card.Value</button> *@
                                @*     </div> *@
                                @* </div> *@
                                
                            }
                        </div>
                    }
                }
                else
                {
                    @if (!CardsIsRevealed)
                    {
                        <button @onclick="RevealCards">Reveal cards</button>
                    }
                    else
                    {
                        <button @onclick="NewGame">Start new game</button>
                    }
                }
            </div>

            <div class="users-layout">

            </div>

        </div>
    }

</div>


@* <p>Hello, @UserName</p> *@


@* <p>All users :</p> *@
@* @foreach (var user in Users) *@
@* { *@
@*     <p>@user.Guid | @user.Name | @user.IsSpectator</p> *@
@*     @if(CurrentUser.IsSpectator) *@
@*     { *@
@*         @if (CurrentUser.Guid != user.Guid || CurrentUser.Name != user.Name) *@
@*         { *@
@*             @if (user.CardValue == 0) *@
@*             { *@
@*                 <p>?</p> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <p>@user.CardValue</p> *@
@*             } *@
@*         } *@
@*     } *@
@*     else if (!CurrentUser.IsSpectator && CurrentUser.Guid == user.Guid && CurrentUser.Name == user.Name) *@
@*     { *@
@*         @if (user.CardValue == 0) *@
@*         { *@
@*             <p>?</p> *@
@*         } *@
@*         else *@
@*         { *@
@*             <p>@user.CardValue</p> *@
@*         } *@
@*     } *@
@*     else *@
@*     { *@
@*         @if (user.IsSpectator) *@
@*         { *@
@*             continue; *@
@*         } *@
@*          *@
@*         @if (CardsIsRevealed) *@
@*         { *@
@*             @if (user.CardValue == 0) *@
@*             { *@
@*                 <p>?</p> *@
@*             } *@
@*             else *@
@*             { *@
@*                 <p>@user.CardValue</p> *@
@*             } *@
@*         } *@
@*         else *@
@*         { *@
@*             <p>?</p> *@
@*         } *@
@*     } *@
@* } *@